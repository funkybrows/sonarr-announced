CONFIG_FOLDER_PATH ?= ../config
DOCKER_APP_DEST ?= /app
DOCKER_APP_SOURCE_FROM_COMPOSE ?=
DOCKER_CTX_FROM_PYTHON_DOCKER ?= ..
DOCKER_LOCAL_CMD ?= /bin/bash
DOCKER_PROJECT_ROOT_FROM_CTX ?= ../sonarrAnnounced
DOCKER_TAG_VERSION ?= latest
DOCKER_PYTHON_DOCKER_FROM_PROJECT_ROOT ?= ../Python-Docker
DOCKER_USER_CONFIG_PATH_FROM_COMPOSE ?=
ifndef DOCKER_WATCH
DOCKER_NO_WATCH = -d
endif
DOCKER_REGISTRY ?=
NAMESPACE ?=
PROJECT_NAME ?=
PYTHON_VERSION=3.9

ifdef DOCKER_COMMON_ENV_PATH
include $(DOCKER_COMMON_ENV_PATH)
DOCKER_COMMON_ENV_PATH_FROM_PYTHON_DOCKER=$(DOCKER_CTX_FROM_PYTHON_DOCKER)/$(DOCKER_PROJECT_ROOT_FROM_CTX)/$(DOCKER_COMMON_ENV_PATH)
endif

ifdef DOCKER_SPECIFIC_ENV_PATH
include $(DOCKER_SPECIFIC_ENV_PATH)
DOCKER_SPECIFIC_ENV_PATH_FROM_PYTHON_DOCKER=$(DOCKER_CTX_FROM_PYTHON_DOCKER)/$(DOCKER_PROJECT_ROOT_FROM_CTX)/$(DOCKER_SPECIFIC_ENV_PATH)
endif
export

# Docker
build-base-image:
	cd $(DOCKER_PYTHON_DOCKER_FROM_PROJECT_ROOT); DOCKER_REGISTRY=$(DOCKER_REGISTRY) PYTHON_VERSION=$(PYTHON_VERSION) make build-base-image

build-project:
	cd $(DOCKER_PYTHON_DOCKER_FROM_PROJECT_ROOT); \
		DOCKER_APP_DEST=$(DOCKER_APP_DEST) \
		DOCKER_PROJECT_ROOT_FROM_CTX==$(DOCKER_PROJECT_ROOT_FROM_CTX) \
		DOCKER_CTX=$(DOCKER_CTX_FROM_PYTHON_DOCKER) \
		DOCKER_PROJECT_ROOT_FROM_CTX=$(DOCKER_PROJECT_ROOT_FROM_CTX) \
		DOCKER_REGISTRY=$(DOCKER_REGISTRY) \
		NAMESPACE=$(NAMESPACE) \
		PROJECT_NAME=$(PROJECT_NAME) \
		PYTHON_VERSION=$(PYTHON_VERSION) \
		make build-project

deploy-project:
	cd $(DOCKER_PYTHON_DOCKER_FROM_PROJECT_ROOT); \
		CONFIG_FOLDER_PATH=${CONFIG_FOLDER_PATH} \
		DOCKER_APP_DEST=$(DOCKER_APP_DEST) \
		DOCKER_NO_WATCH=$(DOCKER_NO_WATCH) \
		DOCKER_REGISTRY=$(DOCKER_REGISTRY) \
		DOCKER_TAG_VERSION=$(DOCKER_TAG_VERSION) \
		NAMESPACE=$(NAMESPACE) \
		PROJECT_NAME=$(PROJECT_NAME) \
	make deploy-project

teardown-project:
	cd $(DOCKER_PYTHON_DOCKER_FROM_PROJECT_ROOT); \
		make teardown-project

launch-local-project:
	CONFIG_FOLDER_PATH=${CONFIG_FOLDER_PATH} \
	DOCKER_APP_DEST=${DOCKER_APP_DEST} \
	DOCKER_APP_SOURCE_FROM_COMPOSE=$(DOCKER_APP_SOURCE_FROM_COMPOSE) \
	DOCKER_REGISTRY=$(DOCKER_REGISTRY) \
	DOCKER_TAG_VERSION=$(DOCKER_TAG_VERSION) \
	DOCKER_USER_CONFIG_PATH_FROM_COMPOSE=$(DOCKER_USER_CONFIG_PATH_FROM_COMPOSE) \
	NAMESPACE=$(NAMESPACE) \
	PROJECT_NAME=$(PROJECT_NAME) \
	docker compose \
		-f config/docker/compose/docker-compose.local.yaml \
		run -it ${PROJECT_NAME} $(DOCKER_LOCAL_CMD)
